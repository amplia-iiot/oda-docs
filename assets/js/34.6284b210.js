(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{237:function(e,a,t){"use strict";t.r(a);var r=t(0),o=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"diozero"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diozero"}},[e._v("#")]),e._v(" DIOZero")]),e._v(" "),t("p",[e._v("Implementation of the library DIOZero to give an access to analog in/outputs.\nThis is the hardware module that give support to ADC Datastreams.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/amplia-iiot/oda/tree/master/oda-hardware/diozero",target:"_blank",rel:"noopener noreferrer"}},[e._v("To access source code click here"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h4",{attrs:{id:"dependencies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[e._v("#")]),e._v(" Dependencies")]),e._v(" "),t("p",[e._v("This module requires the following modules:")]),e._v(" "),t("ul",[t("li",[t("strong",[t("router-link",{attrs:{to:"/infrastructure/core.html"}},[e._v("Commons")])],1),e._v(": Provide the ADC APIs, exceptions and types and the basic APIs to register the service.")])]),e._v(" "),t("h4",{attrs:{id:"configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),t("p",[e._v("To configure I2C Hardware module, a file named "),t("em",[e._v("es.amplia.oda.hardware.diozero.cfg")]),e._v(" must be created with the next parameters\nfor each input channel that you want to register:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("index")]),e._v(": "),t("em",[e._v("Required parameter")]),e._v(". Index of the channel.")]),e._v(" "),t("li",[t("strong",[e._v("deviceType")]),e._v(": "),t("em",[e._v('"" (void String) by default')]),e._v(". Type of this pin. adc.ADCChannel for specify an analog channel.")]),e._v(" "),t("li",[t("strong",[e._v("name")]),e._v(": "),t("em",[e._v("Required parameter")]),e._v(". Unique name for the channel.")]),e._v(" "),t("li",[t("strong",[e._v("lowMode")]),e._v(": "),t("em",[e._v("Required parameter")]),e._v(". Specify if lowMode is enabled.")]),e._v(" "),t("li",[t("strong",[e._v("path")]),e._v(": "),t("em",[e._v("Required parameter")]),e._v(". Path to the local directory that contains the value of this pin.")]),e._v(" "),t("li",[t("strong",[e._v("device")]),e._v(": "),t("em",[e._v("Required parameter")]),e._v(". Name of the device that handles this pin (OWASYS, FX30 or anyone else).")])]),e._v(" "),t("p",[t("em",[e._v("es.amplia.oda.hardware.diozero.cfg")]),e._v(" will have a similar format to:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("1=deviceType:adc.ADCChannel,name:light,lowMode:false,min:0,max:10\n4=deviceType:adc.ADCChannel,name:temperature,lowMode:false,min:-10,max:50\n")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);