(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{226:function(e,t,r){"use strict";r.r(t);var a=r(0),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"device-info"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#device-info"}},[e._v("#")]),e._v(" Device Info")]),e._v(" "),r("p",[e._v("This Datastream module enable to register the datastreams to provide the information of the device. This means that each device will have its own module Device Info.")]),e._v(" "),r("p",[e._v("There are this devices info modules for now:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/amplia-iiot/oda/tree/master/oda-datastreams/deviceinfo",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[e._v("x86_64 System devices")]),r("OutboundLink")],1),e._v(": Devices with a x86_64 Linux system")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/amplia-iiot/oda/tree/master/oda-datastreams/deviceinfofx30",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[e._v("FX30")]),r("OutboundLink")],1),e._v(": "),r("a",{attrs:{href:"https://source.sierrawireless.com/devices/fx-series/fx30/#sthash.N8DdzEYE.dpbs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sierra Wireles FX30/FX30S"),r("OutboundLink")],1),e._v(" devices")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/amplia-iiot/oda/tree/develop/oda-datastreams/deviceinfoowa450",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[e._v("OWA450")]),r("OutboundLink")],1),e._v(": "),r("a",{attrs:{href:"https://www.owasys.com/en/products/owa450",target:"_blank",rel:"noopener noreferrer"}},[e._v("Owasys OWA450"),r("OutboundLink")],1),e._v(" devices")])]),e._v(" "),r("h4",{attrs:{id:"dependencies"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[e._v("#")]),e._v(" Dependencies")]),e._v(" "),r("p",[r("em",[e._v("This module have no dependencies.")])]),e._v(" "),r("h4",{attrs:{id:"configuration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),r("p",[e._v("To configure Device Info module, a file named "),r("em",[e._v("es.amplia.oda.datastreams.deviceinfo.cfg")]),e._v(" (or "),r("em",[e._v("deviceinfofx30")]),e._v(", or "),r("em",[e._v("deviceinfoowa450")]),e._v(")\nmust be created with the next parameters for each input channel that you want to register:")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("deviceId")]),e._v(": (null if not specified). Identifier of the device. This parameter is used by the third-system (OpenGate,\nScada...) to identify where the data arrive from.")]),e._v(" "),r("li",[r("strong",[e._v("apiKey")]),e._v(": (Required parameter). API Key (like a pass) to access to the third-system.")]),e._v(" "),r("li",[r("strong",[e._v("source")]),e._v(": (Required parameter). Directory where the bundles (.jar's) are installed.")]),e._v(" "),r("li",[r("strong",[e._v("path")]),e._v(": (Required parameter). Directory where the script of the Device Info are installed. These files will be executed on runtime to collect the information.")])]),e._v(" "),r("p",[r("em",[e._v("es.amplia.oda.datastreams.deviceinfo*.cfg")]),e._v(" will have a similar format to:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("# Device identifier. If not provided the serial number is used\ndeviceId=testDevice\n# API Key to connect to OpenGate\napiKey=testApiKey\n# Directory to get the scripts\nsource=deploy\n# Directory to extract the scripts\npath=scripts\n")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);