(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{239:function(e,t,o){"use strict";o.r(t);var a=o(0),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h3",{attrs:{id:"modbus"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#modbus"}},[e._v("#")]),e._v(" ModBus")]),e._v(" "),o("p",[e._v("Implementation of the library j2mod to give an access to devices connected through modbus.\nThis is the hardware module that give support to Modbus Datastreams.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/amplia-iiot/oda/tree/master/oda-hardware/modbus",target:"_blank",rel:"noopener noreferrer"}},[e._v("To access source code click here"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("h4",{attrs:{id:"dependencies"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[e._v("#")]),e._v(" Dependencies")]),e._v(" "),o("p",[e._v("This module requires the following modules:")]),e._v(" "),o("ul",[o("li",[o("strong",[o("router-link",{attrs:{to:"/infrastructure/core.html"}},[e._v("Commons")])],1),e._v(": Provide the ModBus APIs, exceptions and types and the basic APIs to register the service.")])]),e._v(" "),o("h4",{attrs:{id:"configuration"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),o("p",[e._v("To configure Mod Bus Hardware module, a file named "),o("em",[e._v("es.amplia.oda.hardware.modbus.cfg")]),e._v(" must be created with the next parameters:")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("type")]),e._v(": "),o("em",[e._v("Required data")]),e._v(". Type of modbus connection. Allowed modbus types are TCP, UDP, Serial.")]),e._v(" "),o("li",[o("strong",[e._v("address")]),e._v(": "),o("em",[e._v("Required data for UDP and TCP")]),e._v(". Address where the modbus will connect.")]),e._v(" "),o("li",[o("strong",[e._v("port")]),e._v(": "),o("em",[e._v("Required data for UDP and TCP")]),e._v(". Address where the modbus will connect.")]),e._v(" "),o("li",[o("strong",[e._v("timeout")]),e._v(": "),o("em",[e._v("Required data for UDP and TCP")]),e._v(". Time in seconds that the modbus hardware will wait until do a timeout if the master slave doesn't respond.")]),e._v(" "),o("li",[o("strong",[e._v("reconnect")]),e._v(": "),o("em",[e._v("Required data for TCP")]),e._v(". Enable the option to reconnect automatically if connection is dropped.")]),e._v(" "),o("li",[o("strong",[e._v("portName")]),e._v(": "),o("em",[e._v("Required data for serial")]),e._v(". Name of the serial port (tty)")]),e._v(" "),o("li",[o("strong",[e._v("baudRate")]),e._v(": "),o("em",[e._v("Required data for serial")]),e._v(". Baud Rate of the connection. 9600, 38400 or 115200.")]),e._v(" "),o("li",[o("strong",[e._v("flowControlIn")]),e._v(": "),o("em",[e._v("Required data for serial")]),e._v(". Flow Control of the input of connection.")]),e._v(" "),o("li",[o("strong",[e._v("flowControlOut")]),e._v(": "),o("em",[e._v("Required data for serial")]),e._v(". Flow Control of the output of connection.")]),e._v(" "),o("li",[o("strong",[e._v("databits")]),e._v(": "),o("em",[e._v("Required data for serial")]),e._v(". Data bits of the connection. 5, 6, 7 or 8.")]),e._v(" "),o("li",[o("strong",[e._v("stopbits")]),e._v(": "),o("em",[e._v("Required data for serial")]),e._v(". Stop bits of the connection. 1 or 2.")]),e._v(" "),o("li",[o("strong",[e._v("parity")]),e._v(": "),o("em",[e._v("Required data for serial")]),e._v(". Parity type of the connection. 0 is NONE parity, 1 is ODD parity, 2 is EVEN parity,\n3 is mark parity and 4 is SPACE parity.")]),e._v(" "),o("li",[o("strong",[e._v("encoding")]),e._v(": "),o("em",[e._v("Required data for serial")]),e._v(". Encoding of the serial connection communication. E.g. ascii or rtu.")]),e._v(" "),o("li",[o("strong",[e._v("echo")]),e._v(": "),o("em",[e._v("Required data for serial")]),e._v(". Enable echo on the connection (show send data from local to the slave).")])]),e._v(" "),o("p",[o("em",[e._v("es.amplia.oda.hardware.modbus.cfg")]),e._v(" will have a similar format to:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("type=UDP\naddress=localhost\nport=1234\ntimeout=30\n")])])]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("type=TCP\naddress=localhost\nport=1234\ntimeout=30\nreconnect=true\n")])])]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("type=Serial\nportName=ttyUSB0\nbaudRate=115200\nflowControlIn=1\nflowControlOut=1\ndatabits=8\nstopbits=1\nparity=0\nencoding=ascii\necho=true\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);