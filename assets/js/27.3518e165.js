(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{230:function(e,t,a){"use strict";a.r(t);var s=a(0),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"mqtt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mqtt"}},[e._v("#")]),e._v(" MQTT")]),e._v(" "),a("p",[e._v("This datastreams corresponds to the enabling/disabling, writing and reading of datastreams allocated into another application\nthat communicates with the ODA through MQTT protocol.")]),e._v(" "),a("p",[e._v("Unlike the other datastreams, this doesn't register the datastreams handled by configuration. This datastream configuration\ncontains various topics in which the mqtt communication is made and where the module will subscribe when connection is achieved,\nhaving a topic for each function. To register a datastream, a message have to be sent to the enable datastream topic with\nthe device id and the datastream id, i.e. to enable a datastream with id myDatastreamId of the device with id myDeviceId,\nwe have to send a message to the topic oda/enable/myDeviceId/myDatastreamId.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("The explained format is common in all the topics for all the functions. To operate on a datastream, we use the next topic format:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("expectedTopic/deviceId/datastreamId\n")])])])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/amplia-iiot/oda/tree/master/oda-datastreams/mqtt",target:"_blank",rel:"noopener noreferrer"}},[e._v("To access source code click here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[e._v("#")]),e._v(" Dependencies")]),e._v(" "),a("p",[e._v("This module requires the following modules:")]),e._v(" "),a("ul",[a("li",[a("strong",[a("router-link",{attrs:{to:"/infrastructure/comms.html#MQTT"}},[e._v("MQTT Comms")])],1),e._v(": Provide an implementation of MQTT Client Factory that the datastream\nmodule need to connect to the MQTT broker to provide information of each datastream and allow the operations.")]),e._v(" "),a("li",[a("strong",[a("router-link",{attrs:{to:"/infrastructure/services.html#Serialization"}},[e._v("CBOR Serializer")])],1),e._v(": Needed to transform the incoming messages to be readables by the modules and to serialize the outgoing payloads.")]),e._v(" "),a("li",[a("strong",[e._v("Event Publisher")]),e._v(": Used to handle the incoming events and send it.")])]),e._v(" "),a("h4",{attrs:{id:"configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),a("p",[e._v("To configure I2C Datastream module, a file named "),a("em",[e._v("es.amplia.oda.datastreams.mqtt.cfg")]),e._v(" must be created with the next parameters:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("brokerURI")]),e._v(": "),a("em",[e._v("Required parameter")]),e._v(". Direction where the MQTT client have to connect.")]),e._v(" "),a("li",[a("strong",[e._v("clientId")]),e._v(": "),a("em",[e._v("selected at random by default")]),e._v(". Identifier that the module client will have to connect to the broker")]),e._v(" "),a("li",[a("strong",[e._v("enableDatastreamTopic")]),e._v(": "),a("em",[e._v("Required parameter")]),e._v(". Topic where ODA expects the enables messages to be sent.")]),e._v(" "),a("li",[a("strong",[e._v("disableDatastreamTopic")]),e._v(": "),a("em",[e._v("Required parameter")]),e._v(". Topic where ODA expects the disables messages to be sent.")]),e._v(" "),a("li",[a("strong",[e._v("eventTopic")]),e._v(": "),a("em",[e._v("Required parameter")]),e._v(". Topic where ODA expects the events messages to be sent.")]),e._v(" "),a("li",[a("strong",[e._v("readRequestTopic")]),e._v(": "),a("em",[e._v("Required parameter")]),e._v(". Topic where ODA will send the request of reading operations.")]),e._v(" "),a("li",[a("strong",[e._v("readResponseTopic")]),e._v(": "),a("em",[e._v("Required parameter")]),e._v(". Topic where ODA expects the responses of read operations to be sent.")]),e._v(" "),a("li",[a("strong",[e._v("writeRequestTopic")]),e._v(": "),a("em",[e._v("Required parameter")]),e._v(". Topic where ODA will send the request of writing operations.")]),e._v(" "),a("li",[a("strong",[e._v("writeResponseTopic")]),e._v(": "),a("em",[e._v("Required parameter")]),e._v(". Topic where ODA expects the responses of write operations to be sent.")]),e._v(" "),a("li",[a("strong",[e._v("lwtTopic")]),e._v(": "),a("em",[e._v("Required parameter")]),e._v(". Topic where ODA expects the Last Will messages of another devices clients to be sent.")])]),e._v(" "),a("p",[a("em",[e._v("es.amplia.oda.datastreams.mqtt.cfg")]),e._v(" will have a similar format to:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("brokerURI=tcp://localhost:1883\nclientId=oda\nenableDatastreamTopic=oda/enable\ndisableDatastreamTopic=oda/disable\neventTopic=oda/event\nreadRequestTopic=oda/operation/read/request\nreadResponseTopic=oda/operation/read/response\nwriteRequestTopic=oda/operation/write/request\nwriteResponseTopic=oda/operation/write/response\nlwtTopic=oda/lwt\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v('Using the previous configuration example, ODA will use the next topics for the datastream "'),a("em",[e._v("tempInCelsius")]),e._v('" of the device "'),a("em",[e._v("thermoDev")]),e._v('":')]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("Function")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("Topic used by oda")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("enable")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("oda/enable/thermoDev/tempInCelsius")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("disable")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("oda/disable/thermoDev/tempInCelsius")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("event")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("oda/event/thermoDev/tempInCelsius")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("readRequest")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("oda/operation/read/request/thermoDev/tempInCelsius")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("readResponse")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("oda/operation/read/response/thermoDev/tempInCelsius")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("writeRequest")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("oda/operation/write/request/thermoDev/tempInCelsius")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("writeResponse")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("oda/operation/write/response/thermoDev/tempInCelsius")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("lwt")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("oda/lwt/thermoDev/tempInCelsius")])])])])])])}),[],!1,null,null,null);t.default=i.exports}}]);