(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{222:function(e,t,o){"use strict";o.r(t);var a=o(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h3",{attrs:{id:"websocket"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[e._v("#")]),e._v(" WebSocket")]),e._v(" "),o("p",[e._v("This connector enable communication via "),o("a",{attrs:{href:"https://github.com/amplia-iiot/oda/tree/master/oda-connectors/websocket",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebSocket Protocol"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("p",[e._v("Allows to send data to the OpenGate platform and receive operations from it.")]),e._v(" "),o("h4",{attrs:{id:"dependencies"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[e._v("#")]),e._v(" Dependencies")]),e._v(" "),o("p",[e._v("This module requires the following modules:")]),e._v(" "),o("ul",[o("li",[o("strong",[o("router-link",{attrs:{to:"/infrastructure/core.html"}},[e._v("Core commons")])],1),e._v(": Provides many interfaces that this module will use")]),e._v(" "),o("li",[o("strong",[o("router-link",{attrs:{to:"/layers/datastreams/deviceinfo.html"}},[e._v("Device Info Provider")])],1),e._v(": Needed to know the Device Id of the device that are running the Agent and the API Key to access to OpenGate.\nBoth data are required to achieve a connection with OpenGate and transferred data will have the deviceId in its metadata.")]),e._v(" "),o("li",[o("strong",[o("router-link",{attrs:{to:"/layers/operationdispatcher/"}},[e._v("Dispatcher")])],1),e._v(": Needed to process the payloads and de/serialize its content.")])]),e._v(" "),o("h4",{attrs:{id:"configuration"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),o("p",[e._v("To configure WebSocket connector, a file named "),o("em",[e._v("es.amplia.oda.connector.websocket.cfg")]),e._v(" must be created with the next parameters:")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("host")]),e._v(": "),o("em",[e._v("Required parameter")]),e._v(". Specify the direction of the third system the connector have to send the data.\n'localhost' is a good host to do tests with.")]),e._v(" "),o("li",[o("strong",[e._v("port")]),e._v(": "),o("em",[e._v("80 by default")]),e._v(". Port though the connector have to connect to the host.")]),e._v(" "),o("li",[o("strong",[e._v("path")]),e._v(": "),o("em",[e._v("Required parameter")]),e._v(". The general path of the route used to create the connection with third system.")]),e._v(" "),o("li",[o("strong",[e._v("connectionTimeout")]),e._v(": "),o("em",[e._v("30 by default")]),e._v(". Time in seconds that the client created by the connector will wait to throw a timeout.")]),e._v(" "),o("li",[o("strong",[e._v("keepAliveInterval")]),e._v(": "),o("em",[e._v("180 by default")]),e._v(". Time in seconds that the client created by the connector will send a KeepAlive message to notify to the WebSocket server.")])]),e._v(" "),o("p",[e._v("In other words, "),o("em",[e._v("es.amplia.oda.connector.websocket.cfg")]),e._v(" will have the content:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("host=localhost\nport=80\npath=commonPathToAllSites\nconnectionTimeout=30\nkeepAliveInterval=180\n")])])]),o("p",[e._v("And can run with the following minimal content:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("host=localhost\ngeneralPath=commonPathToAllSites\n")])])]),o("h4",{attrs:{id:"source-code"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#source-code"}},[e._v("#")]),e._v(" Source Code")]),e._v(" "),o("p",[e._v("You can check the source code "),o("a",{attrs:{href:"https://github.com/amplia-iiot/oda/tree/master/oda-connectors/websocket",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),o("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);